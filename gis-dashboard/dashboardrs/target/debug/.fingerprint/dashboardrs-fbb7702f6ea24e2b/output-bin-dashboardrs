{"message":"mismatched closing delimiter: `}`","code":null,"level":"error","spans":[{"file_name":"src/main.rs","byte_start":6347,"byte_end":6348,"line_start":170,"line_end":170,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    }","highlight_start":5,"highlight_end":6}],"label":"mismatched closing delimiter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":4615,"byte_end":4616,"line_start":145,"line_end":145,"column_start":28,"column_end":29,"is_primary":false,"text":[{"text":"    fn view(&self) -> Html {","highlight_start":28,"highlight_end":29}],"label":"closing delimiter possibly meant for this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":4773,"byte_end":4774,"line_start":148,"line_end":148,"column_start":42,"column_end":43,"is_primary":true,"text":[{"text":"        let mut ta: String = String::from(\"<html><head><script src='https://api.mapbox.com/mapbox-gl-js/v2.3.1/mapbox-gl.js'></script><link href='https://api.mapbox.com/mapbox-gl-js/v2.3.1/mapbox-gl.css' rel='stylesheet' /></head><body><div id='map' style='width: 100%; height: 500px;'></div><script>mapboxgl.accessToken = '\";","highlight_start":42,"highlight_end":43}],"label":"unclosed delimiter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: mismatched closing delimiter: `}`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:148:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn view(&self) -> Html {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mclosing delimiter possibly meant for this\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m148\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut ta: String = String::from(\"<html><head><script src='https://api.mapbox.com/mapbox-gl-js/v2.3.1/mapbox-gl.js'></script><li\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munclosed delimiter\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m170\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmismatched closing delimiter\u001b[0m\n\n"}
{"message":"expected one of `)`, `,`, `.`, `?`, or an operator, found `;`","code":null,"level":"error","spans":[{"file_name":"src/main.rs","byte_start":4773,"byte_end":4774,"line_start":148,"line_end":148,"column_start":42,"column_end":43,"is_primary":true,"text":[{"text":"        let mut ta: String = String::from(\"<html><head><script src='https://api.mapbox.com/mapbox-gl-js/v2.3.1/mapbox-gl.js'></script><link href='https://api.mapbox.com/mapbox-gl-js/v2.3.1/mapbox-gl.css' rel='stylesheet' /></head><body><div id='map' style='width: 100%; height: 500px;'></div><script>mapboxgl.accessToken = '\";","highlight_start":42,"highlight_end":43}],"label":"unclosed delimiter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":5057,"byte_end":5058,"line_start":148,"line_end":148,"column_start":326,"column_end":327,"is_primary":true,"text":[{"text":"        let mut ta: String = String::from(\"<html><head><script src='https://api.mapbox.com/mapbox-gl-js/v2.3.1/mapbox-gl.js'></script><link href='https://api.mapbox.com/mapbox-gl-js/v2.3.1/mapbox-gl.css' rel='stylesheet' /></head><body><div id='map' style='width: 100%; height: 500px;'></div><script>mapboxgl.accessToken = '\";","highlight_start":326,"highlight_end":327}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`)` may belong here","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":5057,"byte_end":5057,"line_start":148,"line_end":148,"column_start":326,"column_end":326,"is_primary":true,"text":[{"text":"        let mut ta: String = String::from(\"<html><head><script src='https://api.mapbox.com/mapbox-gl-js/v2.3.1/mapbox-gl.js'></script><link href='https://api.mapbox.com/mapbox-gl-js/v2.3.1/mapbox-gl.css' rel='stylesheet' /></head><body><div id='map' style='width: 100%; height: 500px;'></div><script>mapboxgl.accessToken = '\";","highlight_start":326,"highlight_end":326}],"label":null,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `)`, `,`, `.`, `?`, or an operator, found `;`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:148:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m148\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mrom(\"<html><head><script src='https://api.mapbox.com/mapbox-gl-js/v2.3.1/mapbox-gl.js'></script><link href='https://api.mapbox.com/mapbox-gl-js/v2.3.1/mapbox-gl.css' rel='stylesheet' /></head><body><div id='map' style='width: 100%; height: 500px;'></div><script>mapboxgl.accessToken = '\";\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munclosed delimiter\u001b[0m\u001b[0m                                                                                                                                                                                                                                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: `)` may belong here\u001b[0m\n\n"}
{"message":"expected expression, found `)`","code":null,"level":"error","spans":[{"file_name":"src/main.rs","byte_start":6347,"byte_end":6348,"line_start":170,"line_end":170,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    }","highlight_start":5,"highlight_end":6}],"label":"expected expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected expression, found `)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:170:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m170\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected expression\u001b[0m\n\n"}
{"message":"the property value must be either a literal or enclosed in braces. Consider adding braces around your expression.: MethodCall(\n    ExprMethodCall {\n        attrs: [],\n        receiver: Field(\n            ExprField {\n                attrs: [],\n                base: Path(\n                    ExprPath {\n                        attrs: [],\n                        qself: None,\n                        path: Path {\n                            leading_colon: None,\n                            segments: [\n                                PathSegment {\n                                    ident: Ident {\n                                        ident: \"self\",\n                                        span: #0 bytes(5721..5725),\n                                    },\n                                    arguments: None,\n                                },\n                            ],\n                        },\n                    },\n                ),\n                dot_token: Dot,\n                member: Named(\n                    Ident {\n                        ident: \"link\",\n                        span: #0 bytes(5726..5730),\n                    },\n                ),\n            },\n        ),\n        dot_token: Dot,\n        method: Ident {\n            ident: \"callback\",\n            span: #0 bytes(5731..5739),\n        },\n        turbofish: None,\n        paren_token: Paren,\n        args: [\n            Closure(\n                ExprClosure {\n                    attrs: [],\n                    movability: None,\n                    asyncness: None,\n                    capture: None,\n                    or1_token: Or,\n                    inputs: [\n                        Wild(\n                            PatWild {\n                                attrs: [],\n                                underscore_token: Underscore,\n                            },\n                        ),\n                    ],\n                    or2_token: Or,\n                    output: Default,\n                    body: Path(\n                        ExprPath {\n                            attrs: [],\n                            qself: None,\n                            path: Path {\n                                leading_colon: None,\n                                segments: [\n                                    PathSegment {\n                                        ident: Ident {\n                                            ident: \"Msg\",\n                                            span: #0 bytes(5744..5747),\n                                        },\n                                        arguments: None,\n                                    },\n                                    Colon2,\n                                    PathSegment {\n                                        ident: Ident {\n                                            ident: \"AddPoint\",\n                                            span: #0 bytes(5749..5757),\n                                        },\n                                        arguments: None,\n                                    },\n                                ],\n                            },\n                        },\n                    ),\n                },\n            ),\n        ],\n    },\n)","code":null,"level":"error","spans":[{"file_name":"src/main.rs","byte_start":5721,"byte_end":5758,"line_start":158,"line_end":158,"column_start":37,"column_end":74,"is_primary":true,"text":[{"text":"                    <button onclick=self.link.callback(|_| Msg::AddPoint)>{\"Add Point\"}</button>","highlight_start":37,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: the property value must be either a literal or enclosed in braces. Consider adding braces around your expression.: MethodCall(\u001b[0m\n\u001b[0m\u001b[1m           ExprMethodCall {\u001b[0m\n\u001b[0m\u001b[1m               attrs: [],\u001b[0m\n\u001b[0m\u001b[1m               receiver: Field(\u001b[0m\n\u001b[0m\u001b[1m                   ExprField {\u001b[0m\n\u001b[0m\u001b[1m                       attrs: [],\u001b[0m\n\u001b[0m\u001b[1m                       base: Path(\u001b[0m\n\u001b[0m\u001b[1m                           ExprPath {\u001b[0m\n\u001b[0m\u001b[1m                               attrs: [],\u001b[0m\n\u001b[0m\u001b[1m                               qself: None,\u001b[0m\n\u001b[0m\u001b[1m                               path: Path {\u001b[0m\n\u001b[0m\u001b[1m                                   leading_colon: None,\u001b[0m\n\u001b[0m\u001b[1m                                   segments: [\u001b[0m\n\u001b[0m\u001b[1m                                       PathSegment {\u001b[0m\n\u001b[0m\u001b[1m                                           ident: Ident {\u001b[0m\n\u001b[0m\u001b[1m                                               ident: \"self\",\u001b[0m\n\u001b[0m\u001b[1m                                               span: #0 bytes(5721..5725),\u001b[0m\n\u001b[0m\u001b[1m                                           },\u001b[0m\n\u001b[0m\u001b[1m                                           arguments: None,\u001b[0m\n\u001b[0m\u001b[1m                                       },\u001b[0m\n\u001b[0m\u001b[1m                                   ],\u001b[0m\n\u001b[0m\u001b[1m                               },\u001b[0m\n\u001b[0m\u001b[1m                           },\u001b[0m\n\u001b[0m\u001b[1m                       ),\u001b[0m\n\u001b[0m\u001b[1m                       dot_token: Dot,\u001b[0m\n\u001b[0m\u001b[1m                       member: Named(\u001b[0m\n\u001b[0m\u001b[1m                           Ident {\u001b[0m\n\u001b[0m\u001b[1m                               ident: \"link\",\u001b[0m\n\u001b[0m\u001b[1m                               span: #0 bytes(5726..5730),\u001b[0m\n\u001b[0m\u001b[1m                           },\u001b[0m\n\u001b[0m\u001b[1m                       ),\u001b[0m\n\u001b[0m\u001b[1m                   },\u001b[0m\n\u001b[0m\u001b[1m               ),\u001b[0m\n\u001b[0m\u001b[1m               dot_token: Dot,\u001b[0m\n\u001b[0m\u001b[1m               method: Ident {\u001b[0m\n\u001b[0m\u001b[1m                   ident: \"callback\",\u001b[0m\n\u001b[0m\u001b[1m                   span: #0 bytes(5731..5739),\u001b[0m\n\u001b[0m\u001b[1m               },\u001b[0m\n\u001b[0m\u001b[1m               turbofish: None,\u001b[0m\n\u001b[0m\u001b[1m               paren_token: Paren,\u001b[0m\n\u001b[0m\u001b[1m               args: [\u001b[0m\n\u001b[0m\u001b[1m                   Closure(\u001b[0m\n\u001b[0m\u001b[1m                       ExprClosure {\u001b[0m\n\u001b[0m\u001b[1m                           attrs: [],\u001b[0m\n\u001b[0m\u001b[1m                           movability: None,\u001b[0m\n\u001b[0m\u001b[1m                           asyncness: None,\u001b[0m\n\u001b[0m\u001b[1m                           capture: None,\u001b[0m\n\u001b[0m\u001b[1m                           or1_token: Or,\u001b[0m\n\u001b[0m\u001b[1m                           inputs: [\u001b[0m\n\u001b[0m\u001b[1m                               Wild(\u001b[0m\n\u001b[0m\u001b[1m                                   PatWild {\u001b[0m\n\u001b[0m\u001b[1m                                       attrs: [],\u001b[0m\n\u001b[0m\u001b[1m                                       underscore_token: Underscore,\u001b[0m\n\u001b[0m\u001b[1m                                   },\u001b[0m\n\u001b[0m\u001b[1m                               ),\u001b[0m\n\u001b[0m\u001b[1m                           ],\u001b[0m\n\u001b[0m\u001b[1m                           or2_token: Or,\u001b[0m\n\u001b[0m\u001b[1m                           output: Default,\u001b[0m\n\u001b[0m\u001b[1m                           body: Path(\u001b[0m\n\u001b[0m\u001b[1m                               ExprPath {\u001b[0m\n\u001b[0m\u001b[1m                                   attrs: [],\u001b[0m\n\u001b[0m\u001b[1m                                   qself: None,\u001b[0m\n\u001b[0m\u001b[1m                                   path: Path {\u001b[0m\n\u001b[0m\u001b[1m                                       leading_colon: None,\u001b[0m\n\u001b[0m\u001b[1m                                       segments: [\u001b[0m\n\u001b[0m\u001b[1m                                           PathSegment {\u001b[0m\n\u001b[0m\u001b[1m                                               ident: Ident {\u001b[0m\n\u001b[0m\u001b[1m                                                   ident: \"Msg\",\u001b[0m\n\u001b[0m\u001b[1m                                                   span: #0 bytes(5744..5747),\u001b[0m\n\u001b[0m\u001b[1m                                               },\u001b[0m\n\u001b[0m\u001b[1m                                               arguments: None,\u001b[0m\n\u001b[0m\u001b[1m                                           },\u001b[0m\n\u001b[0m\u001b[1m                                           Colon2,\u001b[0m\n\u001b[0m\u001b[1m                                           PathSegment {\u001b[0m\n\u001b[0m\u001b[1m                                               ident: Ident {\u001b[0m\n\u001b[0m\u001b[1m                                                   ident: \"AddPoint\",\u001b[0m\n\u001b[0m\u001b[1m                                                   span: #0 bytes(5749..5757),\u001b[0m\n\u001b[0m\u001b[1m                                               },\u001b[0m\n\u001b[0m\u001b[1m                                               arguments: None,\u001b[0m\n\u001b[0m\u001b[1m                                           },\u001b[0m\n\u001b[0m\u001b[1m                                       ],\u001b[0m\n\u001b[0m\u001b[1m                                   },\u001b[0m\n\u001b[0m\u001b[1m                               },\u001b[0m\n\u001b[0m\u001b[1m                           ),\u001b[0m\n\u001b[0m\u001b[1m                       },\u001b[0m\n\u001b[0m\u001b[1m                   ),\u001b[0m\n\u001b[0m\u001b[1m               ],\u001b[0m\n\u001b[0m\u001b[1m           },\u001b[0m\n\u001b[0m\u001b[1m       )\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:158:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    <button onclick=self.link.callback(|_| Msg::AddPoint)>{\"Add Point\"}</button>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unresolved imports `yew::ComponentLink`, `yew::ShouldRender`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":236,"byte_end":249,"line_start":6,"line_end":6,"column_start":28,"column_end":41,"is_primary":true,"text":[{"text":"use yew::{html, Component, ComponentLink, Html, ShouldRender};","highlight_start":28,"highlight_end":41}],"label":"no `ComponentLink` in the root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":257,"byte_end":269,"line_start":6,"line_end":6,"column_start":49,"column_end":61,"is_primary":true,"text":[{"text":"use yew::{html, Component, ComponentLink, Html, ShouldRender};","highlight_start":49,"highlight_end":61}],"label":"no `ShouldRender` in the root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":236,"byte_end":249,"line_start":6,"line_end":6,"column_start":28,"column_end":41,"is_primary":true,"text":[{"text":"use yew::{html, Component, ComponentLink, Html, ShouldRender};","highlight_start":28,"highlight_end":41}],"label":null,"suggested_replacement":"Component","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved imports `yew::ComponentLink`, `yew::ShouldRender`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:6:28\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse yew::{html, Component, ComponentLink, Html, ShouldRender};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `ShouldRender` in the root\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `ComponentLink` in the root\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a similar name exists in the module: `Component`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `GeoJson`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":6847,"byte_end":6854,"line_start":183,"line_end":183,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"            GeoJson::FeatureCollection(collection) => collection","highlight_start":13,"highlight_end":20}],"label":"use of undeclared type `GeoJson`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `GeoJson`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:183:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            GeoJson::FeatureCollection(collection) => collection\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `GeoJson`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `GeoJson`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":7051,"byte_end":7058,"line_start":188,"line_end":188,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"            GeoJson::Feature(feature) => match feature.geometry {","highlight_start":13,"highlight_end":20}],"label":"use of undeclared type `GeoJson`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `GeoJson`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:188:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            GeoJson::Feature(feature) => match feature.geometry {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `GeoJson`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `GeoJson`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":7241,"byte_end":7248,"line_start":192,"line_end":192,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"            GeoJson::Geometry(geometry) => vec![geometry],","highlight_start":13,"highlight_end":20}],"label":"use of undeclared type `GeoJson`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `GeoJson`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:192:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m192\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            GeoJson::Geometry(geometry) => vec![geometry],\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `GeoJson`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `File`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":6463,"byte_end":6467,"line_start":175,"line_end":175,"column_start":20,"column_end":24,"is_primary":true,"text":[{"text":"    let mut file = File::open(path).expect(\"failed to open file\");","highlight_start":20,"highlight_end":24}],"label":"use of undeclared type `File`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[],"label":null,"suggested_replacement":"use std::fs::File;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `File`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:175:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m175\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut file = File::open(path).expect(\"failed to open file\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `File`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[38;5;10muse std::fs::File;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"cannot find function `start_app` in crate `yew`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":7412,"byte_end":7421,"line_start":200,"line_end":200,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"    yew::start_app::<Model>();","highlight_start":10,"highlight_end":19}],"label":"not found in `yew`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function `start_app` in crate `yew`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:200:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m200\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    yew::start_app::<Model>();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `yew`\u001b[0m\n\n"}
{"message":"unused imports: `App`, `HttpResponse`, `HttpServer`, `Responder`, `get`, `post`, `web`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":101,"byte_end":104,"line_start":4,"line_end":4,"column_start":17,"column_end":20,"is_primary":true,"text":[{"text":"use actix_web::{get, post, web, App, HttpResponse, HttpServer, Responder};","highlight_start":17,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":106,"byte_end":110,"line_start":4,"line_end":4,"column_start":22,"column_end":26,"is_primary":true,"text":[{"text":"use actix_web::{get, post, web, App, HttpResponse, HttpServer, Responder};","highlight_start":22,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":112,"byte_end":115,"line_start":4,"line_end":4,"column_start":28,"column_end":31,"is_primary":true,"text":[{"text":"use actix_web::{get, post, web, App, HttpResponse, HttpServer, Responder};","highlight_start":28,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":117,"byte_end":120,"line_start":4,"line_end":4,"column_start":33,"column_end":36,"is_primary":true,"text":[{"text":"use actix_web::{get, post, web, App, HttpResponse, HttpServer, Responder};","highlight_start":33,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":122,"byte_end":134,"line_start":4,"line_end":4,"column_start":38,"column_end":50,"is_primary":true,"text":[{"text":"use actix_web::{get, post, web, App, HttpResponse, HttpServer, Responder};","highlight_start":38,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":136,"byte_end":146,"line_start":4,"line_end":4,"column_start":52,"column_end":62,"is_primary":true,"text":[{"text":"use actix_web::{get, post, web, App, HttpResponse, HttpServer, Responder};","highlight_start":52,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":148,"byte_end":157,"line_start":4,"line_end":4,"column_start":64,"column_end":73,"is_primary":true,"text":[{"text":"use actix_web::{get, post, web, App, HttpResponse, HttpServer, Responder};","highlight_start":64,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":85,"byte_end":159,"line_start":4,"line_end":4,"column_start":1,"column_end":75,"is_primary":true,"text":[{"text":"use actix_web::{get, post, web, App, HttpResponse, HttpServer, Responder};","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `App`, `HttpResponse`, `HttpServer`, `Responder`, `get`, `post`, `web`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:4:17\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse actix_web::{get, post, web, App, HttpResponse, HttpServer, Responder};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `wasm_bindgen::prelude::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":276,"byte_end":300,"line_start":7,"line_end":7,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"use wasm_bindgen::prelude::*;","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":272,"byte_end":301,"line_start":7,"line_end":7,"column_start":1,"column_end":30,"is_primary":true,"text":[{"text":"use wasm_bindgen::prelude::*;","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `wasm_bindgen::prelude::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse wasm_bindgen::prelude::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated type alias `geo::Coordinate`: Renamed to `geo_types::Coord` (or `geo::Coord`)","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":170,"byte_end":180,"line_start":5,"line_end":5,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"use geo::{Coordinate, Geometry, Point, Polygon};","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(deprecated)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated type alias `geo::Coordinate`: Renamed to `geo_types::Coord` (or `geo::Coord`)\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:5:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse geo::{Coordinate, Geometry, Point, Polygon};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(deprecated)]` on by default\u001b[0m\n\n"}
{"message":"use of deprecated type alias `geo::Coordinate`: Renamed to `geo_types::Coord` (or `geo::Coord`)","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":687,"byte_end":697,"line_start":27,"line_end":27,"column_start":41,"column_end":51,"is_primary":true,"text":[{"text":"    fn add_polygon(&mut self, points: &[Coordinate<f64>]) {","highlight_start":41,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated type alias `geo::Coordinate`: Renamed to `geo_types::Coord` (or `geo::Coord`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:27:41\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn add_polygon(&mut self, points: &[Coordinate<f64>]) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated type alias `geo::Coordinate`: Renamed to `geo_types::Coord` (or `geo::Coord`)","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":2804,"byte_end":2814,"line_start":100,"line_end":100,"column_start":21,"column_end":31,"is_primary":true,"text":[{"text":"                    Coordinate { x: 0.0, y: 0.0 },","highlight_start":21,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated type alias `geo::Coordinate`: Renamed to `geo_types::Coord` (or `geo::Coord`)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:100:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    Coordinate { x: 0.0, y: 0.0 },\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated type alias `geo::Coordinate`: Renamed to `geo_types::Coord` (or `geo::Coord`)","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":2855,"byte_end":2865,"line_start":101,"line_end":101,"column_start":21,"column_end":31,"is_primary":true,"text":[{"text":"                    Coordinate { x: 1.0, y: 0.0 },","highlight_start":21,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated type alias `geo::Coordinate`: Renamed to `geo_types::Coord` (or `geo::Coord`)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:101:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    Coordinate { x: 1.0, y: 0.0 },\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated type alias `geo::Coordinate`: Renamed to `geo_types::Coord` (or `geo::Coord`)","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":2906,"byte_end":2916,"line_start":102,"line_end":102,"column_start":21,"column_end":31,"is_primary":true,"text":[{"text":"                    Coordinate { x: 1.0, y: 1.0 },","highlight_start":21,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated type alias `geo::Coordinate`: Renamed to `geo_types::Coord` (or `geo::Coord`)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:102:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    Coordinate { x: 1.0, y: 1.0 },\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated type alias `geo::Coordinate`: Renamed to `geo_types::Coord` (or `geo::Coord`)","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":2957,"byte_end":2967,"line_start":103,"line_end":103,"column_start":21,"column_end":31,"is_primary":true,"text":[{"text":"                    Coordinate { x: 0.0, y: 1.0 },","highlight_start":21,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated type alias `geo::Coordinate`: Renamed to `geo_types::Coord` (or `geo::Coord`)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:103:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    Coordinate { x: 0.0, y: 1.0 },\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated type alias `geo::Coordinate`: Renamed to `geo_types::Coord` (or `geo::Coord`)","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":3008,"byte_end":3018,"line_start":104,"line_end":104,"column_start":21,"column_end":31,"is_primary":true,"text":[{"text":"                    Coordinate { x: 0.0, y: 0.0 },","highlight_start":21,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated type alias `geo::Coordinate`: Renamed to `geo_types::Coord` (or `geo::Coord`)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:104:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    Coordinate { x: 0.0, y: 0.0 },\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"message":"method `create` has 2 parameters but the declaration in trait `yew::Component::create` has 1","code":{"code":"E0050","explanation":"An attempted implementation of a trait method has the wrong number of function\nparameters.\n\nErroneous code example:\n\n```compile_fail,E0050\ntrait Foo {\n    fn foo(&self, x: u8) -> bool;\n}\n\nstruct Bar;\n\n// error: method `foo` has 1 parameter but the declaration in trait `Foo::foo`\n// has 2\nimpl Foo for Bar {\n    fn foo(&self) -> bool { true }\n}\n```\n\nFor example, the `Foo` trait has a method `foo` with two function parameters\n(`&self` and `u8`), but the implementation of `foo` for the type `Bar` omits\nthe `u8` parameter. To fix this error, they must have the same parameters:\n\n```\ntrait Foo {\n    fn foo(&self, x: u8) -> bool;\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo(&self, x: u8) -> bool { // ok!\n        true\n    }\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2309,"byte_end":2352,"line_start":85,"line_end":85,"column_start":18,"column_end":61,"is_primary":true,"text":[{"text":"    fn create(_: Self::Properties, link: ComponentLink<Self>) -> Self {","highlight_start":18,"highlight_end":61}],"label":"expected 1 parameter, found 2","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`create` from trait: `fn(&yew::Context<Self>) -> Self`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0050]\u001b[0m\u001b[0m\u001b[1m: method `create` has 2 parameters but the declaration in trait `yew::Component::create` has 1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:85:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn create(_: Self::Properties, link: ComponentLink<Self>) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 1 parameter, found 2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `create` from trait: `\u001b[0m\u001b[0m\u001b[1mfn(&yew::Context<Self>) -> Self\u001b[0m\u001b[0m`\u001b[0m\n\n"}
{"message":"method `update` has 2 parameters but the declaration in trait `yew::Component::update` has 3","code":{"code":"E0050","explanation":"An attempted implementation of a trait method has the wrong number of function\nparameters.\n\nErroneous code example:\n\n```compile_fail,E0050\ntrait Foo {\n    fn foo(&self, x: u8) -> bool;\n}\n\nstruct Bar;\n\n// error: method `foo` has 1 parameter but the declaration in trait `Foo::foo`\n// has 2\nimpl Foo for Bar {\n    fn foo(&self) -> bool { true }\n}\n```\n\nFor example, the `Foo` trait has a method `foo` with two function parameters\n(`&self` and `u8`), but the implementation of `foo` for the type `Bar` omits\nthe `u8` parameter. To fix this error, they must have the same parameters:\n\n```\ntrait Foo {\n    fn foo(&self, x: u8) -> bool;\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo(&self, x: u8) -> bool { // ok!\n        true\n    }\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":2519,"byte_end":2548,"line_start":93,"line_end":93,"column_start":15,"column_end":44,"is_primary":true,"text":[{"text":"    fn update(&mut self, msg: Self::Message) -> ShouldRender {","highlight_start":15,"highlight_end":44}],"label":"expected 3 parameters, found 2","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`update` from trait: `fn(&mut Self, &yew::Context<Self>, <Self as yew::Component>::Message) -> bool`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0050]\u001b[0m\u001b[0m\u001b[1m: method `update` has 2 parameters but the declaration in trait `yew::Component::update` has 3\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:93:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn update(&mut self, msg: Self::Message) -> ShouldRender {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 3 parameters, found 2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `update` from trait: `\u001b[0m\u001b[0m\u001b[1mfn(&mut Self, &yew::Context<Self>, <Self as yew::Component>::Message) -> bool\u001b[0m\u001b[0m`\u001b[0m\n\n"}
{"message":"method `view` has 1 parameter but the declaration in trait `yew::Component::view` has 2","code":{"code":"E0050","explanation":"An attempted implementation of a trait method has the wrong number of function\nparameters.\n\nErroneous code example:\n\n```compile_fail,E0050\ntrait Foo {\n    fn foo(&self, x: u8) -> bool;\n}\n\nstruct Bar;\n\n// error: method `foo` has 1 parameter but the declaration in trait `Foo::foo`\n// has 2\nimpl Foo for Bar {\n    fn foo(&self) -> bool { true }\n}\n```\n\nFor example, the `Foo` trait has a method `foo` with two function parameters\n(`&self` and `u8`), but the implementation of `foo` for the type `Bar` omits\nthe `u8` parameter. To fix this error, they must have the same parameters:\n\n```\ntrait Foo {\n    fn foo(&self, x: u8) -> bool;\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo(&self, x: u8) -> bool { // ok!\n        true\n    }\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":4600,"byte_end":4605,"line_start":145,"line_end":145,"column_start":13,"column_end":18,"is_primary":true,"text":[{"text":"    fn view(&self) -> Html {","highlight_start":13,"highlight_end":18}],"label":"expected 2 parameters, found 1","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`view` from trait: `fn(&Self, &yew::Context<Self>) -> VNode`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0050]\u001b[0m\u001b[0m\u001b[1m: method `view` has 1 parameter but the declaration in trait `yew::Component::view` has 2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:145:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn view(&self) -> Html {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 2 parameters, found 1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `view` from trait: `\u001b[0m\u001b[0m\u001b[1mfn(&Self, &yew::Context<Self>) -> VNode\u001b[0m\u001b[0m`\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":742,"byte_end":757,"line_start":28,"line_end":28,"column_start":36,"column_end":51,"is_primary":true,"text":[{"text":"        let polygon = Polygon::new(points.to_vec(), vec![]);","highlight_start":36,"highlight_end":51}],"label":"expected struct `geo::LineString`, found struct `Vec`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":729,"byte_end":741,"line_start":28,"line_end":28,"column_start":23,"column_end":35,"is_primary":false,"text":[{"text":"        let polygon = Polygon::new(points.to_vec(), vec![]);","highlight_start":23,"highlight_end":35}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `geo::LineString<_>`\n   found struct `Vec<Coord>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"/home/devu/.cargo/registry/src/github.com-1ecc6299db9ec823/geo-types-0.7.8/src/geometry/polygon.rs","byte_start":4297,"byte_end":4300,"line_start":125,"line_end":125,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(mut exterior: LineString<T>, mut interiors: Vec<LineString<T>>) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"try wrapping the expression in `geo::LineString`","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":742,"byte_end":742,"line_start":28,"line_end":28,"column_start":36,"column_end":36,"is_primary":true,"text":[{"text":"        let polygon = Polygon::new(points.to_vec(), vec![]);","highlight_start":36,"highlight_end":36}],"label":null,"suggested_replacement":"geo::LineString(","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/main.rs","byte_start":757,"byte_end":757,"line_start":28,"line_end":28,"column_start":51,"column_end":51,"is_primary":true,"text":[{"text":"        let polygon = Polygon::new(points.to_vec(), vec![]);","highlight_start":51,"highlight_end":51}],"label":null,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:28:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let polygon = Polygon::new(points.to_vec(), vec![]);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected struct `geo::LineString`, found struct `Vec`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected struct `\u001b[0m\u001b[0m\u001b[1mgeo::LineString<_>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m               found struct `\u001b[0m\u001b[0m\u001b[1mVec<Coord>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/devu/.cargo/registry/src/github.com-1ecc6299db9ec823/geo-types-0.7.8/src/geometry/polygon.rs:125:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(mut exterior: LineString<T>, mut interiors: Vec<LineString<T>>) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `geo::LineString`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let polygon = Polygon::new(\u001b[0m\u001b[0m\u001b[38;5;10mgeo::LineString(\u001b[0m\u001b[0mpoints.to_vec()\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\u001b[0m, vec![]);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++++++\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"message":"no variant or associated item named `MultiLine` found for enum `Geometry` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1378,"byte_end":1387,"line_start":44,"line_end":44,"column_start":27,"column_end":36,"is_primary":true,"text":[{"text":"                Geometry::MultiLine(_) => \"MultiLineString\",","highlight_start":27,"highlight_end":36}],"label":"variant or associated item not found in `Geometry<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a variant with a similar name","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1378,"byte_end":1387,"line_start":44,"line_end":44,"column_start":27,"column_end":36,"is_primary":true,"text":[{"text":"                Geometry::MultiLine(_) => \"MultiLineString\",","highlight_start":27,"highlight_end":36}],"label":null,"suggested_replacement":"MultiPoint","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no variant or associated item named `MultiLine` found for enum `Geometry` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:44:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                Geometry::MultiLine(_) => \"MultiLineString\",\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Geometry<_>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: there is a variant with a similar name: `MultiPoint`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `GeoJson`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":6768,"byte_end":6775,"line_start":181,"line_end":181,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"    match GeoJson::from_value(json) {","highlight_start":11,"highlight_end":18}],"label":"use of undeclared type `GeoJson`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `GeoJson`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:181:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    match GeoJson::from_value(json) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `GeoJson`\u001b[0m\n\n"}
{"message":"aborting due to 16 previous errors; 9 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 16 previous errors; 9 warnings emitted\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0050, E0308, E0425, E0432, E0433, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0050, E0308, E0425, E0432, E0433, E0599.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0050`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0050`.\u001b[0m\n"}
